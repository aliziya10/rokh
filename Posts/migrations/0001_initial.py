# Generated by Django 4.2 on 2023-05-20 08:57

import Posts.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('parent_id', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ImagePost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='post/')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80, null=True)),
                ('sub_title', models.CharField(max_length=80)),
                ('text', models.TextField()),
                ('status', models.IntegerField(validators=[Posts.models.validate1or2])),
                ('dateOfPublish', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('persian_date', models.CharField(blank=True, editable=False, max_length=10, null=True)),
                ('image_url', models.TextField(null=True)),
            ],
            options={
                'permissions': [('access', 'Can access')],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=25, unique=True)),
                ('post_id', models.ManyToManyField(to='Posts.post')),
            ],
        ),
    ]
